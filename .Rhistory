tabName = "about",
badgeLabel = "new",
badgeColor = "green"
)
),
width = 250),
dashboardBody(
fluidPage(
tabItems(
tabItem(
tabName = "dashboard",
navbarPage(
"Tabs",
tabPanel(
"How to Use !",
h1("Warning! Still in Beta Version"),
column(
width = 4,h3(strong("ESPNcricinfo Player ID")),
numericInput(
inputId = "num",
value = NULL,
label = NULL
),
h3(radioButtons(
"MatchType",
"Match Format:",
c(
"Test" = "1",
"One-Day" = "2",
"T20I" = "3",
"Combined" = "11"
)
)),
actionButton("do", strong("Generate Viz"))
),
column(width = 5,
h3(
strong("Steps in using this Dashboard!"),
tags$ol(
tags$li(
h3(
"Grab the ESPNCricinfo Player ID of the player, you would like to analyze.
Some of the sample IDs are on the right!"
)
),
tags$li(h3("Paste the ID in text box.")),
tags$li(h3(
"Select a Match Format from the given options"
)),
tags$li(
h3(
"Click the 'Generate' button to generate the visualizations.
(P.S: Hitting Enter/Return wont work yet! :) )"
)
),
tags$li(h3(
"Switch Between the 3 tabs and have a look at the Stats in colour."
))
)
)),
column(
width = 3,
h3(strong("Sample Player IDs:    ")),
tags$ul(
tags$li(h3("Sachin Tendulkar: 35320")),
tags$li(h3("MS Dhoni: 28081")),
tags$li(h3("Virat Kohli: 253802")),
tags$li(h3("Sourav Ganguly: 28779")),
tags$li(h3("Cheteshwar Pujara: 32540")),
tags$li(h3("Babar Azam: 348144")),
tags$li(h3("Vijay Shankar: 477021"))
)
),
column(width = 12,
h3(strong("Some Bugs:    ")),
tags$ul(
tags$li(h3("App Crashes when a format,in which a player has not played,is chosen.Combined format works for any international player")),
tags$li(h3("Currently this app is restricted to International Players,
entering any other player IDs will lead to app termination. You can reload the page then.")),
tags$li(h3(HTML("<s>Vijay Shankar</s>"),"3D "," Pie Charts are best seen in bigger displays.")
))
)
),
tabPanel(
"Batting Statistics",
h3(
"Visualize the Batting Summary of Players with their ESPNCricinfo Player IDs"
),
fluidRow(
# box(column(6,plotOutput(outputId="abc1", width="500px",height="400px")),status = "warning",collapsible = TRUE),
# box(column(6,plotOutput(outputId="abc2", width="500px",height="400px")),status = "warning",collapsible = TRUE),
# box(column(6,plotOutput(outputId="abc3", width="500px",height="400px")),status = "warning",collapsible = TRUE),
# box(column(6,plotOutput(outputId="abc4", width="500px",height="400px")),status = "warning",collapsible = TRUE),
# box(column(6,plotOutput(outputId="abc5", width="500px",height="400px")),status = "warning",collapsible = TRUE)
box(
plotOutput(outputId = "abc1"),
status = "warning",
collapsible = TRUE,
solidHeader = TRUE,
title = "Batting Average vs Opposition"
),
box(
plotOutput(outputId = "abc2"),
status = "primary",
collapsible = TRUE,
solidHeader = TRUE,
title = "Batting Average in Host Counties"
),
box(
plotOutput(outputId = "abc3"),
status = "success",
collapsible = TRUE,
solidHeader = TRUE,
title = "Batting Average by Position Played"
),
box(
plotOutput(outputId = "abc4"),
status = "info",
collapsible = TRUE,
solidHeader = TRUE,
title = "Year-Wise Batting Average"
),
box(
plotOutput(outputId = "abc5"),
status = "danger",
collapsible = TRUE,
solidHeader = TRUE,
title = "Batting Dismissal Summary"
),
box(
plotOutput(outputId = "abc6"),
status = "danger",
collapsible = TRUE,
solidHeader = TRUE,
title = "Batting Dismissal Summary vs Bowler Type"
),
column(
width = 12,
h1("Upcoming Topics"),
tags$ul(tags$li(h3(
"Dismissals in Batting Runs Interval"
)),
tags$li(h3(
"Impact of Toss decision on Batting"
)),
tags$li(
h3("Batting Performance in Major Tournaments")
),
tags$li(h3("...")))
)
)
),
tabPanel("Bowling Statistics", h1("Coming Soon! Keep Checking the tab")),
tabPanel("Fielding Statistics", h1("Coming Soon! Keep Checking the tab"))
)
),
tabItem(tabName = "about",
column(width = 12,
HTML(
"<h1><strong>Maintainer:</strong><h1>
<h3>Pranav Nagarajan</h3>
<h3>Contact : npranav10@gmail.com</h3>
<h1><strong>Package Used:</strong><h1>
<h3>statsguRu</h3>
<h3>Pranav Nagarajan</h3>
<h3>URL : <a href='https://github.com/npranav10/statsguRu'>https://github.com/npranav10/statsguRu</a></h3>
")
)
)
))
))
)
runApp('statsguRu_ui_v4.R')
runApp('statsguRu_ui_v4.R')
runApp('statsguRu_ui_v4.R')
runApp('statsguRu_ui_v4.R')
runApp('statsguRu_ui_v4.R')
runApp('statsguRu_ui_v4.R')
runApp('statsguRu_ui_v4.R')
runApp('statsguRu_ui_v4.R')
remove.packages("statsguRu")
devtools::install_github("npranav10/statsguRu")
library(statsguRu)
runApp('statsguRu_ui_v4.R')
runApp('statsguRu_ui_v4.R')
runApp('statsguRu_ui_v4.R')
runApp('statsguRu_ui_v4.R')
runApp('statsguRu_ui_v4.R')
runApp('statsguRu_ui_v4.R')
library(shiny); runApp('statsguRu_ui_v4.R')
?licence
?license
document()
library(statsguRu)
document()
library(statsguRu)
library(statsguRu)
library(statsguRu)
library(statsguRu)
library(statsguRu)
document()
library(statsguRu)
library(statsguRu)
document()
library(statsguRu)
library(statsguRu)
document()
library(statsguRu)
document()
library(statsguRu)
library(shiny); runApp('C:/Users/Pranav N/Desktop/New folder/statsguRu_ui_v4.R')
runApp('C:/Users/Pranav N/Desktop/New folder/statsguRu_ui_v4.R')
runApp('C:/Users/Pranav N/Desktop/New folder/statsguRu_ui_v4.R')
url = "http://stats.espncricinfo.com/ci/engine/player/35320.html?class=1;template=results;type=batting;view=ground"
data = htmltab(url)
View(data)
data = htmltab(url,which = 2)
data = htmltab(url,which = 3)
data = htmltab(url,which = 4)
url = "http://stats.espncricinfo.com/ci/engine/player/35320.html?class=1;template=results;type=batting;view=innings"
data = htmltab(url,which = 4)
s = htmltab(url,which = 4)
s = order(s,s$Ground)
s = s[order(s$Ground)]
s = s[order(s$Ground),]
View(s)
a = s$Ground$frequenct
a = s$Ground$frequency
factor(s$Ground)
table(s$Ground)
t=table(s$Ground)
View(t)
library(statsguRu)
library(statsguRu)
url = "http://stats.espncricinfo.com/ci/engine/player/35320.html?class=1;template=results;type=batting;view=innings"
s = htmltab(url,which = 4)
library(statsguRu)
s = htmltab(url,which = 4)
s
?grouping
aggregate(s$Runs, s, sum)
?aggregate
a= aggregate(s$Runs,FUN=sum)
a= aggregate(s,s$Runs,FUN=sum)
?aggregate.data.frame
a=aggregate.data.frame(data = s)
a=aggregate.data.frame(s$Runs~s$Ground,s,sum)
a=aggregate.data.frame(s$Runs~s$Ground,data=s,sum)
a=aggregate(s$Runs~s$Ground,data=s,sum)
s$Runs~s$Ground
data.frame(s$Runs~s$Ground()
.
data.frame(s$Runs~s$Ground)
library(dplyr)
a = s %>% group_by(s$Ground) %>% summarise( = sum())
a = s %>% group_by(s$Ground) %>% summarise(s$Runs = sum(s$Runs))
m = s$Runs
m
s <- sapply(s,function(x) {x <- gsub("DNB",0,x)})
View(s)
s
s = as.data.frame(s)
s
s %>% group_by(s$Ground) %>% summarise(m = sum(s$Runs))
runs = s$Runs
runs = as.numeric(runs)
s %>% group_by(s$Ground) %>% summarise(m = sum(runs))
runs
s %>% group_by(s$Ground) %>% summarise(m = sum(runs))
runs = s$Runs
runs = as.integer(runs)
s %>% group_by(s$Ground) %>% summarise(m = sum(runs))
s %>% group_by(s$Ground) %>% summarise(mean(runs))
table
s
s = as.data.frame(s)
s %>% group_by(s$Ground) %>% summarise(as.numeric(s$Runs))
s %>% group_by(s$Ground) %>% summarise(a=as.numeric(s$Runs))
s = as.data.frame(s)
s
a = as.numeric(s$Runs)
s %>% group_by(s$Ground) %>% summarise(a))
s %>% group_by(s$Ground) %>% summarise(a)
s %>% group_by(s$Ground) %>% summarise(a = as.numeric(s$Runs))
s %>% group_by(s$Ground) %>% summarise(a = as.numeric(s$Runs))
s %>% group_by(s$Ground) %>% summarise(a))
s %>% group_by(s$Ground) %>% summarise(a)
s %>% group_by(s$Ground)
s %>% group_by(s$Ground) %>% summarise(s$Runs)
s %>% group_by(s$Ground) %>% summarise(Runs)
summary(s$Runs)
summarise(s$Runs)
summarise(as.numeric(s$Runs)
)
require(dplyr)
summarise(as.numeric(s$Runs)
)
df <- data.frame(A = c(1, 1, 2, 3, 3), B = c(2, 3, 3, 5, 6))
df
df %>% group_by(A) %>% summarise(B = sum(B))
s %>% group_by(s$Ground) %>% summarise(as.numeric(Runs)
)
runs = as.numeric(s$Runs)
s %>% group_by(s$Ground) %>% summarise(runs)
s %>% group_by(s$Ground) %>% summarise(sum(runs))
s %>% group_by(s$Ground) %>% summarise(avg(runs))
s %>% group_by(s$Ground) %>% summarise(mean(runs))
group_by(Ground) %>% summarise(m = mean(Runs))
s %>% group_by(Ground) %>% summarise(m = mean(Runs))
s %>% group_by(Ground) %>% summarise(m = mean(Runs))
s %>% group_by(Ground) %>% summarise(m = mean(as.numeric(Runs)))
dhoni = getDismissalSummary(28081,11)
library(statsguRu)
dhoni = getDismissalSummary(28081,11)
dhoni1 = splitBattingSummary(dhoni,11)
dhoni1 = splitDismissalSummary(dhoni,11)
dhoni1 = splitDismissalSummary(dhoni)
ls(dhoni1)
dhoni1$runsInterval
data = dhoni1
data = data$runsInterval
data$Dis
x = as.numeric(data$Dis)
x
l = round(100*x/sum(x), 1)
l = paste(l,"%",sep = "")
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,10));
l
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals");
pie3D(x,labels = l,main="Distribution of Dismissals");
data = dhoni1
x = as.numeric(data$Dis)
z
x
data = data$runsInterval
x = as.numeric(data$Dis)
x
l = round(100*x/sum(x), 1)
l = paste(l,"%",sep = "")
pie3D(x,labels = l,main="Distribution of Dismissals");
library(plotrix)
pie3D(x,labels = l,main="Distribution of Dismissals");
x
l
?pie3D
dhoni1$runsInterval
legend("topright", as.vector(data$Grouping), cex = 1,fill = rainbow(length(data$Dis)),xpd = TRUE,inset=c(-0.55,-0.05));
pie3D(x,labels = l,main="Distribution of Dismissals");
legend("topright", as.vector(data$Grouping), cex = 1,fill = rainbow(length(data$Dis)),xpd = TRUE,inset=c(-0.55,-0.05));
pie3D(x,labels = l,main="Distribution of Dismissals",mar = c(1,4,4,10));
legend("topright", as.vector(data$Grouping), cex = 1,fill = rainbow(length(data$Dis)),xpd = TRUE,inset=c(-0.55,-0.05));
legend("topright", as.vector(data$Grouping), cex = 1,fill = rainbow(length(data$Dis)),xpd = TRUE,inset=c(-0.25,-0.05));
legend("topright", as.vector(data$Grouping), cex = 1,fill = rainbow(length(data$Dis)),xpd = TRUE,inset=c(-0.35,-0.05));
document()
dispBatsmanDismissalsByRunsInterval(dhoni1)
data = data$runsInterval
data
data = dhoni1
data = data$runsInterval
x = as.numeric(data$Dis)
l = round(100*x/sum(x), 1)
l = paste(l,"%",sep = "")
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10));
l
pie3D(x)
x
l
data = dhoni1
dispBatsmanDismissals =function(data)
{
data= cbind(data$dismissalType,0)
for(i in 1:nrow(data))
{
if(colnames(data[2])=="Span")
data$'0'[i] =sum(as.numeric(data[i,4:12]))
else
data$'0'[i] =sum(as.numeric(data[i,3:11]))
}
x = data$'0'
l = round(100*x/sum(x), 1)
l = paste(l,"%",sep = "")
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,10));
legend("topright", as.vector(data$Grouping), cex = 1,fill = rainbow(length(data$Dis)),xpd = TRUE,inset=c(-0.55,-0.05));
}
data= cbind(data$dismissalType,0)
for(i in 1:nrow(data))
{
if(colnames(data[2])=="Span")
data$'0'[i] =sum(as.numeric(data[i,4:12]))
else
data$'0'[i] =sum(as.numeric(data[i,3:11]))
}
x = data$'0'
x
l = round(100*x/sum(x), 1)
l = paste(l,"%",sep = "")
l
dim(x)==dim(l)
dim(x)
nrow(z)
nrow(x)
is.null(x)
data = dhoni1
data = data$runsInterval
x = as.numeric(data$Dis)
l = round(100*x/sum(x), 1)
l = paste(l,"%",sep = "")
is.null(x)
z
x
is.null(x[-2])
is.null(x[-1])
x[1]
x[-1]
x[10]
is.null(x[10])
lapply(x, function(x) {x[x!=0]})
x
x=lapply(x, function(x) {x[x!=0]})
x
x
data = dhoni1
data = data$runsInterval
x = as.numeric(data$Dis)
l = round(100*x/sum(x), 1)
l = paste(l,"%",sep = "")
x
l
l[11]
x[11]
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10));
dhoni = getDismissalSummary(28081,11)
dhoni1
dispBatsmanDismissalsByBowlerType(dhoni1)
dispBatsmanDismissals(dhoni1)
data
x = as.numeric(data$Dis)
x
x = x[1:9,11]
x = x[c(1:9,11)]
x
l = round(100*x/sum(x), 1)
l = paste(l,"%",sep = "")
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10));
legend("topright", as.vector(data$Grouping), cex = 1,fill = rainbow(length(data$Dis)),xpd = TRUE,inset=c(-0.35,-0.05));
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10));
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),cex=1);
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),cex=2);
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),cex=1);
?pie3D
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),cex=1);
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),labelcex=1);
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),labelcex=0.9);
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),labelcex=0.1);
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),labelcex=0.9);
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),labelcex=1);
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),labelcex=1.2);
?pie3D
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),labelcex=1.2);
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),labelcex=1.2,labelpos = ;);
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),labelcex=1.2,labelpos = l);
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),labelcex=1.2,labelpos = c(1:10));
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),labelcex=1.2,labelpos = c(1:11));
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),labelcex=1.2,labelpos = c(1:20));
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),labelcex=1.2,labelpos = c(1:1));
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),labelcex=1.2,labelpos = c(1:5));
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),labelcex=1.2,labelpos = c(1:11));
pie3D(x,labels = as.vector(l),main="Distribution of Dismissals",mar = c(1,4,4,10),labelcex=1.2,labelpos = -c(1:11));
library(statsguRu)
document()
library(statsguRu)
document()
library(statsguRu)
sachin = getBattingSummary(35320,11)
sachin1 = splitBattingSummary(35320,11)
sachin1 = splitBattingSummary(sachin1,11)
sachin1 = splitBattingSummary(sachin,11)
dispBattingAveByContinent(sachin1)
dispBattingAveByContinent(sachin1)
dispBattingAveByHostCountry(sachin1)
dispBattingAveByHostCountry(sachin1)
dispBattingAveByOpposition(sachin1)
dispBattingAveByOpposition(sachin1)
dispBattingAveByPosPlayed(sachin1)
dispBattingAveByYears(sachin1)
sachin = getDismissalSummary(35320,11)
sachin1 = splitDismissalSummary(sachin)
?splitBattingSummary
?splitDismissalSummary
document()
?splitDismissalSummary
sachin1 = splitDismissalSummary(sachin)
dispBatsmanDismissals(sachin1)
dispBatsmanDismissalsByBowlerType(sachin1)
library(shiny); runApp('C:/Users/Pranav N/Desktop/New folder/statsguRu_ui_v4.R')
library(statsguRu)
document()
?`stats-package`
library("statsguRu", lib.loc="~/R/win-library/3.6")
library(statsguRu)
rm(list = ls())
library(statsguRu)
library(statsguRu)
library(shiny); runApp('C:/Users/Pranav N/Desktop/New folder/statsguRu_ui_v4.R')
runApp('C:/Users/Pranav N/Desktop/New folder/statsguRu_ui_v4.R')
runApp('C:/Users/Pranav N/Desktop/New folder/statsguRu_ui_v4.R')
runApp('C:/Users/Pranav N/Desktop/New folder/statsguRu_ui_v4.R')
library(statsguRu)
?getBattingSummary
?getDismissalSummary
getDismissalSummary(35320,11)
library(shiny); runApp('C:/Users/Pranav N/Desktop/New folder/statsguRu_ui_v4.R')
