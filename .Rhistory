v
v = 1
v
v = 1,2
a=c(0,0,0,0,0)
rowsum(a,dhoni1$dismissalType[4:12])
rowsum(a,dhoni1$dismissalType[4:12,1])
dhoni1$dismissalType[4:12,1]
dhoni1$dismissalType[1,4:12]
rowsum(a,dhoni1$dismissalType[1,4:12])
dhoni1$dismissalType[1,4:12]
rowMeans(dhoni1$dismissalType[1,4:12])
as.numeric(dhoni1$dismissalType[1,4:12])
rowMeans(as.numeric(dhoni1$dismissalType[1,4:12]))
rowMeans(a,as.numeric(dhoni1$dismissalType[1,4:12]))
rowSums(as.numeric(dhoni1$dismissalType[1,4:12]))
?rowSums
rowSums(as.numeric(dhoni1$dismissalType[1,4:12]),dims = 1)
?rowsum
dhoni1$dismissalType[,4:12]=as.numeric(dhoni1$dismissalType[,4:12])
dhoni1$dismissalType
cbind(a,dhoni1$dismissalType)
cbind(0,dhoni1$dismissalType)
data = cbind(a,dhoni1$dismissalType)
data = cbind(0,dhoni1$dismissalType)
data$`0`
sum(as.numeric(dhoni1$dismissalType[1,4:12]))
document()
library(statsguRu)
dispBatsmanDismissals(dhoni)
data = dhoni1
data= cbind(0,data$dismissalType)
for(i in 1:nrow(data))
{
data$'0' =sum(as.numeric(dhoni1$dismissalType[i,4:12]))
}
data$`0`
data = dhoni1
data= cbind(0,data$dismissalType)
for(i in 1:nrow(data))
{
data$'0' =sum(as.numeric(data$dismissalType[i,4:12]))
}
x = data$'0'
x
data$'0' =sum(as.numeric(data$dismissalType[i,5:13]))
x = data$'0'
x
data = splitDismissalSummary(dhoni)
data
data= cbind(0,data$dismissalType)
data
data$`0`
data$`0`[1]
for(i in 1:nrow(data))
{
data$'0'[i] =sum(as.numeric(data$dismissalType[i,5:13]))
}
x = data$'0'
x
sum(as.numeric(data$dismissalType[2,5:13]))
data
data$dismissalType[2,5:13])
data$dismissalType[2,5:13]
data = splitDismissalSummary(dhoni)
data= cbind(0,data$dismissalType)
for(i in 1:nrow(data))
{
data$'0'[i] =sum(as.numeric(data[i,5:13]))
}
x = data$'0'
x
l = round(100*x/sum(x), 1)
l = paste(l,"%",sep = "")
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,1,4,11));
legend("topright", as.vector(data$Grouping), cex = 1,fill = rainbow(length(data$Dis)),xpd = TRUE,inset=c(-0.35,-0.05));
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,1,4,11));
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(2,1,4,11));
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,1,4,11));
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,1,4,1));
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,1,4,10));
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,1,5,10));
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,1,4,10));
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,5,4,10));
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,10));
legend("topright", as.vector(data$Grouping), cex = 1,fill = rainbow(length(data$Dis)),xpd = TRUE,inset=c(-0.35,-0.05));
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,11));
legend("topright", as.vector(data$Grouping), cex = 1,fill = rainbow(length(data$Dis)),xpd = TRUE,inset=c(-0.35,-0.05));
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,11));
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,1));
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,5));
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,4));
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,4),labelcex = 1);
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,4),labelcex = 4);
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,4),labelcex = 2);
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,4),labelcex = 1.1);
?pie3D
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,4),labelcex = 1.1);
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,4),labelcex = 1.1,labelpos = );
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,4),labelcex = 1.1,labelpos = 1);
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,4),labelcex = 1.1,labelpos = TRUE);
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,4),labelcex = 1.1,labelpos = FALSE);
?pie3D
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,11));
legend("topright", as.vector(data$Grouping), cex = 1,fill = rainbow(length(data$Dis)),xpd = TRUE,inset=c(-0.35,-0.05));
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,11));
legend("topright", as.vector(data$Grouping), cex = 1,fill = rainbow(length(data$Dis)),xpd = TRUE,inset=c(-0.35,-0.05));
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,8));
legend("topright", as.vector(data$Grouping), cex = 1,fill = rainbow(length(data$Dis)),xpd = TRUE,inset=c(-0.35,-0.05));
document()
library(statsguRu)
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,8));
runApp('statsguRu_ui_v2.R')
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,11));
legend("topright", as.vector(data$Grouping), cex = 1,fill = rainbow(length(data$Dis)),xpd = TRUE,inset=c(-0.35,-0.05));
legend("topright", as.vector(data$Grouping), cex = 1,fill = rainbow(length(data$Dis)),xpd = TRUE,inset=c(-0.55,-0.05));
document()
library(statsguRu)
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
library(statsguRu)
runApp('statsguRu_ui_v2.R')
sachin = getBattingSummary(35320,2)
sachin1 = splitBattingSummary(35320)
sachin1 = splitBattingSummary(35320,2)
sachin1 = splitBattingSummary(sachin,2)
sachin1
sachin1$yearWise
data = sachin1$yearWise
data
dispBattingAveByYears(sachin1)
barplot(as.numeric(data$Ave),names = as.vector(data$Grouping),las =2,cex.names = 1,col = rainbow(length(data$Ave)),main="Batting Average by Calendar Year")
dhoni = getBattingSummary(28081,11)
dhoni1 = splitBattingSummary(dhoni)
dhoni1 = splitBattingSummary(dhoni,11)
dispBattingAveByYears(dhoni1)
dispBattingAveByYears(dhoni1)
library(statsguRu)
dispBattingAveByYears(dhoni1)
data = dhoni1$yearWise
barplot(as.numeric(data$Ave),names = as.vector(data$Grouping),las =2,cex.names = 0.5,col = rainbow(length(data$Ave)),main="Batting Average by Calendar Year")
data$Grouping
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
document()
library(statsguRu)
remove.packages("statsguRu")
detach
detach("statsguRu")
devtools::install_github("npranav10/statsguRu")
library(statsguRu)
vs = getDismissalSummary(477021,2)
vs = splitDismissalSummary(vs)
vs$dismissalType
dispBatsmanDismissals(vs)
data = vs
data= cbind(0,data$dismissalType)
for(i in 1:nrow(data))
{
data$'0'[i] =sum(as.numeric(data[i,5:13]))
}
x = data$'0'
x
data
data[1,5]
data[1,13]
data[1,12]
dispBatsmanDismissals(splitDismissalSummary(getDismissalSummary(35320,2),2))
s = getDismissalSummary(35320,2)
s = splitDismissalSummary(s,2)
s = splitDismissalSummary(s)
s$dismissalType
s=s$dismissalType
s[1,5:13]
s[1,s$bwd:s$no]
which(colnames(s)=="no")
data$'0'[i] =sum(as.numeric(data[i,5:12]))
data$`0`
data$'0'[i] =sum(as.numeric(data[i,4:12]))
data$`0`
data = vs
data= cbind(0,data$dismissalType)
for(i in 1:nrow(data))
{
data$'0'[i] =sum(as.numeric(data[i,5:12]))
}
x = data$'0'
l = round(100*x/sum(x), 1)
l = paste(l,"%",sep = "")
pie3D(x,labels = l,radius = 1,main="Distribution of Dismissals",mar = c(1,4,4,10));
legend("topright", as.vector(data$Grouping), cex = 1,fill = rainbow(length(data$Dis)),xpd = TRUE,inset=c(-0.55,-0.05));
data = vs
data
data$dismissalType
data= cbind(0,data$dismissalType)
data
data[i,5:12])
data[1,5:12]
data[1]
data
data[1,1]
colnames(data[2])
colnames(data[3])
data= cbind(0,data$dismissalType)
data
data = vs
data= cbind(0,data$dismissalType)
data
data = vs
data= cbind(data$dismissalType,x)
data
data = vs
data= cbind(data$dismissalType,l)
data = vs
data= cbind(data$dismissalType,m)
data= cbind(data$dismissalType,0)
data
colnames(data[2])=="Span"
colnames(data[5])
colnames(data[4])
colnames(data[12])
document()
library(statsguRu)
remove.packages("statsguRu")
devtools::install_github("npranav10/statsguRu")
library(statsguRu)
remove.packages(statsguRu)
library(statsguRu)
remove.packages(statsguRu)
remove.packages("statsguRu")
library(shiny); runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
rm(list=ls())
library(statsguRu)
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
?radioButtons
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
?h2
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
?strong
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
?row
?column
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
skin
?skin
library(shinydashboard)
?skin
runApp('statsguRu_ui_v2.R')
?box
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
?actionButton
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
?boz
?box
runApp('statsguRu_ui_v2.R')
library(shiny); runApp('statsguRu_ui_v2.R')
library(shiny); runApp('statsguRu_ui_v2.R')
library(shiny); runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v2.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
?menuItem
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
?icon
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
library(shiny); runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
library("statsguRu", lib.loc="~/R/win-library/3.6")
document()
library(statsguRu)
library(statsguRu)
library(statsguRu)
library(shiny); runApp('statsguRu_ui_v3.R')
?navbarMenu
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
install.packages(c("cluster", "dimRed", "pillar", "quadprog", "rcmdcheck", "RcppArmadillo", "robustbase", "sfsmisc"))
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
ganguly = getDismissalSummary(28779,3)
ganguly
ganguly = getDismissalSummary(28779,2)
View(ganguly)
ganguly = getDismissalSummary(28779,2)
ganguly = getDismissalSummary(28779,3)
tryCatch
tryCatch()
?tryCatch
tryCatch(1, finally = print("Hello"))
tryCatch(ganguly = getDismissalSummary(28779,3), finally = print("Hello"))
tryCatch(getDismissalSummary(28779,3), finally = print("Hello"))
show_condition <- function(code) {
tryCatch(code,
error = function(c) "error",
warning = function(c) "warning",
message = function(c) "message"
)
}
show_condition(stop("!"))
show_condition <- function(code) {
tryCatch(code,
error = function(c) "error",
warning = function(c) "warning",
message = function(c) "message"
)
}
show_condition(stop(""))
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
tryCatch(
# This is what I want to do...
{
y = x * 2
return(y)
},
# ... but if an error occurs, tell me what happened:
error=function(error_message) {
message("This is my custom message.")
message("And below is the error message from R:")
message(error_message)
return(NA)
}
)
temp1 = getBattingSummary(32540,3)
mt=3
tryCatch(
# This is what I want to do...
{
temp1 = splitBattingSummary(temp1, mt)
},
# ... but if an error occurs, tell me what happened:
error=function(error_message) {
message("This is my custom message.")
message("And below is the error message from R:")
message(error_message)
return(NA)
}
)
temp1 = getBattingSummary(32540,3)
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
mt = 3
id = 35320
temp1 = getBattingSummary(id, mt)
#temp1 = splitBattingSummary(temp1, mt)
validate(
need(tryCatch({temp1 = splitBattingSummary(temp1, mt)},error=function(error_message) { return(FALSE)  }),
"This Player hasnt played in the selected format")
)
temp1
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
tryCatch({temp1 = splitBattingSummary(temp1, mt)
}
)
temp1 = getBattingSummary(id, mt)
tryCatch({temp1 = splitBattingSummary(temp1, mt)})
temp1 = getBattingSummary(32540, mt)
tryCatch({temp1 = splitBattingSummary(temp1, mt)})
temp1
validate(
need(tryCatch({temp1 = splitBattingSummary(temp1, mt)},error=function(error_message) { return(FALSE)  }),
"This Player hasnt played in the selected format")
)
library(shinyjs)
install.packages(shinyjs)
install.packages("shinyjs")
document()
library(statsguRu)
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
rm(list=ls())
runApp('statsguRu_ui_v3.R')
id = 35320
mt = 3
temp1 = getBattingSummary(id, mt)
# temp1 = splitBattingSummary(temp1, mt)
validate(
need(tryCatch({temp1 = splitBattingSummary(temp1, mt)},error=function(error_message) { {js$reset()}  }),
{
showNotification("This Player hasnt played in the selected format.")
})
)
runApp('statsguRu_ui_v3.R')
temp1 = getBattingSummary(id, mt)
# temp1 = splitBattingSummary(temp1, mt)
validate(
need(tryCatch({temp1 = splitBattingSummary(temp1, mt)},error=function(error_message) { {js$reset()}  }),
{
showNotification("This Player hasnt played in the selected format.")
})
)
runApp('statsguRu_ui_v3.R')
temp1 = getBattingSummary(id, mt)
# temp1 = splitBattingSummary(temp1, mt)
validate(
need(tryCatch({temp1 = splitBattingSummary(temp1, mt)},error=function(error_message) { {js$reset()}  }),
{
showNotification("This Player hasnt played in the selected format.")
})
)
temp1 = getBattingSummary(id, mt)
# temp1 = splitBattingSummary(temp1, mt)
validate(
need(tryCatch({temp1 = splitBattingSummary(temp1, mt)},error=function(error_message) { return(FALSE)  }),
showNotification("This Player hasnt played in the selected format.")
)
)
?showNotification
showNotification("This Player hasnt played in the selected format.",session = getDefaultReactiveDomain())
?observeEvent
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
library(shiny); runApp('statsguRu_ui_v3.R')
runApp('statsguRu_ui_v3.R')
